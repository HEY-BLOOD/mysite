"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# initialize env
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False))

# reading .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'article.apps.ArticleConfig',  # 注册 article 应用
    'userprofile.apps.UserprofileConfig',  # 用户管理应用
    'password_reset',  # 密码重置
    'comment.apps.CommentConfig',  # 评论应用
    'taggit',  # django-taggit 标签扩展
    'imagekit',  # django-imagekit 对模型的图片字段进行处理
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# 默认语言 en-us
LANGUAGE_CODE = 'zh-Hans'

# 设置上海的时区，之前的是 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# 指定静态文件的存放位置
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# 静态文件收集目录
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

# 媒体文件地址
MEDIA_URL = '/media/'

# 媒体文件存放位置
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# SMTP服务器配置，以 QQ邮箱为例（不要上传到开源平台）
EMAIL_HOST = 'smtp.qq.com'
# 改为自己的邮箱名
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
# 邮箱密码（授权码）
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
# 发送邮件的端口，不通请尝试 465 或 587 端口。
EMAIL_PORT = env('EMAIL_PORT')
# 是否使用 TLS
EMAIL_USE_TLS = env('EMAIL_USE_TLS')
# 默认的发件人
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')
